//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0-rc.5

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "history")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub created_at: Option<DateTimeWithTimeZone>,
    pub updated_at: Option<DateTimeWithTimeZone>,
    pub deleted_at: Option<DateTimeWithTimeZone>,
    pub client_id: String,
    pub order_id: i64,
    pub direction: String,
    pub symbol: String,
    pub magic: i64,
    #[sea_orm(column_type = "Decimal(Some((20, 8)))")]
    pub open_price: Decimal,
    #[sea_orm(column_type = "Decimal(Some((20, 8)))")]
    pub volume: Decimal,
    #[sea_orm(column_type = "Decimal(Some((20, 8)))")]
    pub market: Decimal,
    #[sea_orm(column_type = "Decimal(Some((20, 8)))")]
    pub swap: Decimal,
    #[sea_orm(column_type = "Decimal(Some((20, 8)))")]
    pub profit: Decimal,
    pub common: String,
    pub opening_time: i64,
    pub closing_time: i64,
    #[sea_orm(column_type = "Text", nullable)]
    pub common_internal: Option<String>,
    pub opening_time_system: Option<i64>,
    pub closing_time_system: Option<i64>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
